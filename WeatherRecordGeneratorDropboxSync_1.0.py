""" WeatherRecordGeneratorDropboxSync_1.0.py
    Uploads the record file generated by WeatherRecordGenerator
    to a specified Dropbox folder.
"""

import sys
import dropbox
from dropbox.files import WriteMode
from dropbox.exceptions import ApiError, AuthError

# Add your OAuth2 access token here.
TOKEN = '###########################'

LOCAL_FILE = '/home/pi/Documents/Python Projects/\
Weather-OWM/weather_record.csv'
BACKUP_PATH = '/Apps/PythonistaFilesSync/\
Weather-OWM/weather_record.csv'


def backup():
    with open(LOCAL_FILE, 'rb') as local_file:
        print("Uploading " + LOCAL_FILE + " to Dropbox as " +
              BACKUP_PATH + "...")
        try:
            dbx.files_upload(local_file.read(), BACKUP_PATH,
                             mode=WriteMode('overwrite'))
        except ApiError as err:
            if(err.error.is_path() and
               err.error.get_path().error.is_insufficient_space()):
                sys.exit("ERROR: Cannot backup, insufficient space.")
            elif err.user_message_text:
                print(err.user_message_text)
            else:
                print(err)
                sys.exit()


if __name__ == '__main__':
    if len(TOKEN) == 0:
        sys.exit("ERROR: Looks like you didn't add your access token. "
                 "Open up backup-and-restore-example.py in a text editor and "
                 "paste in your token in line 14.")

    # Create a Dropbox object
    dbx = dropbox.Dropbox(TOKEN)

    try:
        dbx.users_get_current_account()
    except AuthError as err:
        sys.exit("ERROR: Invalid access token; try re-generating an "
                 "access token from the app console on the web.")

    # Create a backup of the current settings file
    backup()
